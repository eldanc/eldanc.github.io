@InProceedings{AAAI17problem,
	author = {Eldan Cohen and J. Christopher Beck},
	title = {Problem Difficulty and the Phase Transition in Heuristic Search},
	booktitle = {AAAI Conference on Artificial Intelligence (AAAI)},
	pages={780--786},
	year = {2017},
	url = {http://tidel.mie.utoronto.ca/pubs/PTHeuristicSearch_AAAI17.pdf},
	abstract = {In the recent years, there has been significant work on the difficulty of heuristic search problems, identifying different problem instance characteristics that can have a significant impact on search effort. Phase transitions in the solubility of random problem instances have proved useful in the study of problem difficulty for other classes of computational problems, notably SAT and CSP, and it has been shown that the hardest problems typically occur during this rapid transition. In this work, we perform the first empirical investigation of the phase transition phenomena for heuristic search. We establish the existence of a rapid transition in the solubility of an abstract model of heuristic search problems and show that, for greedy best first search, the hardest instances are associated with the phase transition region. We then perform a novel investigation of the behavior of heuristics of different strength across the solubility spectrum. Finally, we demonstrate that the behavior of our abstract model carries over to commonly used benchmark problems including the Pancake Problem, Grid Navigation, TopSpin, and the Towers of Hanoi. An interesting deviation is observed and explained in the Sliding Puzzle.}
}

@InProceedings{SOCS17cost,
	author = {Eldan Cohen and J. Christopher Beck},
	title={Cost-based Heuristics and Node Re-Expansions Across the Phase Transition},
	booktitle = {International Symposium on Combinatorial Search (SoCS)},
	pages     = {11--19},
	year = {2017},
	url = {http://tidel.mie.utoronto.ca/pubs/pt_cost_socs2017.pdf},
	abstract = {Recent work aimed at developing a deeper understanding of suboptimal heuristic search has demonstrated that the use of a cost-based heuristic function in the presence of large operator cost ratio and the decision to allow re-opening of visited nodes can have a significant effect on search effort. In parallel research, phase transitions in problem solubility have proved useful in the study of problem difficulty for many computational problems and have recently been shown to exist in heuristic search problems. In this paper, we show that the impact on search effort associated with a larger operator cost ratio and the number of node re-expansions is concentrated almost entirely in the phase transition region. Combined with previous work connecting local minima in the search space with such behavior, these observations lead us to hypothesize a relationship between the phase transition and the existence of local minima.}
}

@InProceedings{SAT17festivals,
	author = {Eldan Cohen and Guoyu Huang and J. Christopher Beck},
	title={(I Can Get) Satisfaction: Preference-Based Scheduling for Concert-Goers at Multi-venue Music Festivals},
	booktitle = {Theory and Applications of Satisfiability Testing (SAT)},
	pages     = {147--163},
	year = {2017},
	url = {http://tidel.mie.utoronto.ca/pubs/concert_sat2017.pdf},
	abstract = {With more than 30 million attendees each year in the U.S. alone, music festivals are a fast-growing source of entertainment, visited by both fans and industry professionals. Popular music festivals are large-scale events, often spread across multiple venues and lasting several days. The largest festivals exceed 600 shows per day across dozens of venues. With many artists performing at overlapping times in distant locations, preparing a personal schedule for a festival-goer is a challenging task. In this work, we present an automated system for building a personal schedule that maximizes the utility of the shows attended based on the user preferences, while taking into account travel times and required breaks. Our system leverages data mining and machine learning techniques together with combinatorial optimization to provide optimal personal schedules in real time, over a web interface. We evaluate MaxSAT and Constraint Programming formulations on a large set of real festival timetables, demonstrating that MaxSAT can provide optimal solutions in about 10Â s on average, making it a suitable technology for such an online application.}
}

@InProceedings{AAAI18fat,
	author = {Eldan Cohen and J. Christopher Beck},
	title = {Fat- and Heavy-Tailed Behavior in Satisficing Planning},
	booktitle = {AAAI Conference on Artificial Intelligence (AAAI)},
	year = {2018},
	url = {http://tidel.mie.utoronto.ca/pubs/Cohen_AAAI18.pdf},
	abstract = {In this work, we study the runtime distribution of satisficing planning in ensembles of random planning problems and in multiple runs of a randomized heuristic search on a single planning instance. Using common heuristic functions (such as FF) and six benchmark problem domains from the IPC, we find a heavy-tailed behavior, similar to that found in CSP and SAT. We investigate two notions of constrainedness, often used in the modeling of planning problems, and show that the heavy-tailed behavior tends to appear in relatively relaxed problems, where the required effort is, on average, low. Finally, we show that as with randomized restarts in CSP and SAT solving, recent search enhancements that incorporate randomness in the search process can help mitigate the effect of the heavy tail.}
}

@InProceedings{MSR18large,
	author = {Eldan Cohen and Mariano P. Consens},
	title = {Large-Scale Analysis of the Co-Commit Patterns of the Active Developers in GitHub's Top Repositories},
	booktitle = {International Conference on Mining Software Repositories (MSR)},
	pages     = {In Press},
	year = {2018},
	abstract = {GitHub, the largest code hosting site (with 25 million public active repositories and contributions from 6 million active users), provides an unprecedented opportunity to observe the collaboration patterns of software developers. Understanding the patterns behind the social coding phenomena is an active research area where the insights gained can guide the design of better collaboration tools, and can also help to identify and select developer talent.
	In this paper, we present a large-scale analysis of the co-commit patterns in GitHub. We analyze 10 million commits made by 200 thousand developers to 16 thousand repositories, using 17 of the most popular programming languages over a period of 3 years. Although a large volume of data is included in our study, we pay close attention to the participation criteria for repositories and developers. We select repositories by reputation (based on star ranking), and we introduce the notion of active developer in GitHub (observing that a limited subset of developers is responsible for the vast majority of the commits). Using co-authorship networks, we analyze the co-commit patterns of the active developer network for each programming language. We observe that the active developer networks are less connected and more centralized than the general GitHub developer networks, and that the patterns vary significantly among languages. We compare our results to other collaborative environments (Wikipedia and scientific research networks), and we also describe the evolution of the co-commit patterns over time.}
}

@InProceedings{IJCAI18local,
	author = {Eldan Cohen and J. Christopher Beck},
	title = {Local Minima, Heavy Tails, and Search Effort for GBFS},
	booktitle = {International Joint Conference on Artificial Intelligence and European Conference on Artificial Intelligence (IJCAI-ECAI)},
	year = {2018},
	url = {http://tidel.mie.utoronto.ca/pubs/Cohen_ijcai2018.pdf},
	abstract = {Problem   difficulty   for   greedy   best   first   search (GBFS) is not entirely understood, though existing work points to deep local minima and poor correlation between the h-values and the distance to goal as  factors  that  have  significant  negative  effect  on the search effort.  In this work, we show that there is  a  very  strong  exponential  correlation  between the depth of the single deepest local minimum encountered in a search and the overall search effort. Furthermore, we find that the distribution of local minima  depth  changes  dramatically  based  on  the constrainedness of problems, suggesting an explanation for the previously observed heavy-tailed behavior in GBFS. In combinatorial search, a similar result led to the use of randomized restarts to escape deep subtrees with no solution and corresponding significant  speed-ups.   We  adapt  this  method  and propose a randomized restarting GBFS variant that improves GBFS performance by escaping deep local  minima,  and  does  so  even  in  the  presence  of other, randomization-based, search enhancements.}
}